//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DataAccessLayer.ContragentSoapWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ContragentSoap11Binding", Namespace="http://sab/")]
    public partial class Contragent : Microsoft.Web.Services3.WebServicesClientProtocol {
        
        private System.Threading.SendOrPostCallback searchContragentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getContragentByTaxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchContragentUSBOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFinMonitorRiskByContragentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkContragentOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkCodeD5CodeD6OperationCompleted;
        
        private System.Threading.SendOrPostCallback getContactByTaxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getContragentRelationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback identifyContragentByDealOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchContragent2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getContragentByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerProfileFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerProfileByTaxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerCardDealOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerContragentOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateContragentTaxInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchContragentByAccountNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchContragentByDealNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkResidenceChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFinnClassOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Contragent() {
            this.Url = global::DataAccessLayer.Properties.Settings.Default.DataAccessLayer_ContragentSoapService_Contragent;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event searchContragentCompletedEventHandler searchContragentCompleted;
        
        /// <remarks/>
        public event getContragentByTaxIdCompletedEventHandler getContragentByTaxIdCompleted;
        
        /// <remarks/>
        public event searchContragentUSBCompletedEventHandler searchContragentUSBCompleted;
        
        /// <remarks/>
        public event getFinMonitorRiskByContragentIdCompletedEventHandler getFinMonitorRiskByContragentIdCompleted;
        
        /// <remarks/>
        public event checkContragentCompletedEventHandler checkContragentCompleted;
        
        /// <remarks/>
        public event checkCodeD5CodeD6CompletedEventHandler checkCodeD5CodeD6Completed;
        
        /// <remarks/>
        public event getContactByTaxIdCompletedEventHandler getContactByTaxIdCompleted;
        
        /// <remarks/>
        public event getContragentRelationsCompletedEventHandler getContragentRelationsCompleted;
        
        /// <remarks/>
        public event identifyContragentByDealCompletedEventHandler identifyContragentByDealCompleted;
        
        /// <remarks/>
        public event searchContragent2CompletedEventHandler searchContragent2Completed;
        
        /// <remarks/>
        public event getContragentByIdCompletedEventHandler getContragentByIdCompleted;
        
        /// <remarks/>
        public event getCustomerProfileFullCompletedEventHandler getCustomerProfileFullCompleted;
        
        /// <remarks/>
        public event getCustomerProfileByTaxIdCompletedEventHandler getCustomerProfileByTaxIdCompleted;
        
        /// <remarks/>
        public event registerCardDealCompletedEventHandler registerCardDealCompleted;
        
        /// <remarks/>
        public event registerContragentCompletedEventHandler registerContragentCompleted;
        
        /// <remarks/>
        public event updateContragentTaxInfoCompletedEventHandler updateContragentTaxInfoCompleted;
        
        /// <remarks/>
        public event searchContragentByAccountNoCompletedEventHandler searchContragentByAccountNoCompleted;
        
        /// <remarks/>
        public event searchContragentByDealNoCompletedEventHandler searchContragentByDealNoCompleted;
        
        /// <remarks/>
        public event checkResidenceChangeCompletedEventHandler checkResidenceChangeCompleted;
        
        /// <remarks/>
        public event getFinnClassCompletedEventHandler getFinnClassCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:searchContragent", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("contragent", IsNullable=true)]
        public contragent[] searchContragent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string docSr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string docNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] System.Nullable<System.DateTime> dateOfBirth, [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool dateOfBirthSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastNameUkr) {
            object[] results = this.Invoke("searchContragent", new object[] {
                        taxId,
                        docSr,
                        docNo,
                        dateOfBirth,
                        dateOfBirthSpecified,
                        lastNameUkr});
            return ((contragent[])(results[0]));
        }
        
        /// <remarks/>
        public void searchContragentAsync(string taxId, string docSr, string docNo, System.Nullable<System.DateTime> dateOfBirth, bool dateOfBirthSpecified, string lastNameUkr) {
            this.searchContragentAsync(taxId, docSr, docNo, dateOfBirth, dateOfBirthSpecified, lastNameUkr, null);
        }
        
        /// <remarks/>
        public void searchContragentAsync(string taxId, string docSr, string docNo, System.Nullable<System.DateTime> dateOfBirth, bool dateOfBirthSpecified, string lastNameUkr, object userState) {
            if ((this.searchContragentOperationCompleted == null)) {
                this.searchContragentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchContragentOperationCompleted);
            }
            this.InvokeAsync("searchContragent", new object[] {
                        taxId,
                        docSr,
                        docNo,
                        dateOfBirth,
                        dateOfBirthSpecified,
                        lastNameUkr}, this.searchContragentOperationCompleted, userState);
        }
        
        private void OnsearchContragentOperationCompleted(object arg) {
            if ((this.searchContragentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchContragentCompleted(this, new searchContragentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getContragentByTaxId", RequestNamespace="http://sab/", ResponseElementName="getContragentByTaxIdResponce", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("contragent", IsNullable=true)]
        public contragent[] getContragentByTaxId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxId) {
            object[] results = this.Invoke("getContragentByTaxId", new object[] {
                        taxId});
            return ((contragent[])(results[0]));
        }
        
        /// <remarks/>
        public void getContragentByTaxIdAsync(string taxId) {
            this.getContragentByTaxIdAsync(taxId, null);
        }
        
        /// <remarks/>
        public void getContragentByTaxIdAsync(string taxId, object userState) {
            if ((this.getContragentByTaxIdOperationCompleted == null)) {
                this.getContragentByTaxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContragentByTaxIdOperationCompleted);
            }
            this.InvokeAsync("getContragentByTaxId", new object[] {
                        taxId}, this.getContragentByTaxIdOperationCompleted, userState);
        }
        
        private void OngetContragentByTaxIdOperationCompleted(object arg) {
            if ((this.getContragentByTaxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContragentByTaxIdCompleted(this, new getContragentByTaxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:searchContragentUSB", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("contragent", IsNullable=true)]
        public contragent[] searchContragentUSB([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contragentId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string docSr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string docNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contragentCategory, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string searchActive) {
            object[] results = this.Invoke("searchContragentUSB", new object[] {
                        contragentId,
                        taxId,
                        docSr,
                        docNo,
                        sName,
                        name,
                        contragentCategory,
                        searchActive});
            return ((contragent[])(results[0]));
        }
        
        /// <remarks/>
        public void searchContragentUSBAsync(string contragentId, string taxId, string docSr, string docNo, string sName, string name, string contragentCategory, string searchActive) {
            this.searchContragentUSBAsync(contragentId, taxId, docSr, docNo, sName, name, contragentCategory, searchActive, null);
        }
        
        /// <remarks/>
        public void searchContragentUSBAsync(string contragentId, string taxId, string docSr, string docNo, string sName, string name, string contragentCategory, string searchActive, object userState) {
            if ((this.searchContragentUSBOperationCompleted == null)) {
                this.searchContragentUSBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchContragentUSBOperationCompleted);
            }
            this.InvokeAsync("searchContragentUSB", new object[] {
                        contragentId,
                        taxId,
                        docSr,
                        docNo,
                        sName,
                        name,
                        contragentCategory,
                        searchActive}, this.searchContragentUSBOperationCompleted, userState);
        }
        
        private void OnsearchContragentUSBOperationCompleted(object arg) {
            if ((this.searchContragentUSBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchContragentUSBCompleted(this, new searchContragentUSBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getFinMonitorRiskByContragentId", RequestNamespace="http://sab/", ResponseElementName="getFinMonitorRiskByContragentIdResponce", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getFinMonitorRiskByContragentIdItem", IsNullable=true)]
        public getFinMonitorRiskByContragentIdItem[] getFinMonitorRiskByContragentId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contragentId) {
            object[] results = this.Invoke("getFinMonitorRiskByContragentId", new object[] {
                        contragentId});
            return ((getFinMonitorRiskByContragentIdItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getFinMonitorRiskByContragentIdAsync(string contragentId) {
            this.getFinMonitorRiskByContragentIdAsync(contragentId, null);
        }
        
        /// <remarks/>
        public void getFinMonitorRiskByContragentIdAsync(string contragentId, object userState) {
            if ((this.getFinMonitorRiskByContragentIdOperationCompleted == null)) {
                this.getFinMonitorRiskByContragentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFinMonitorRiskByContragentIdOperationCompleted);
            }
            this.InvokeAsync("getFinMonitorRiskByContragentId", new object[] {
                        contragentId}, this.getFinMonitorRiskByContragentIdOperationCompleted, userState);
        }
        
        private void OngetFinMonitorRiskByContragentIdOperationCompleted(object arg) {
            if ((this.getFinMonitorRiskByContragentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFinMonitorRiskByContragentIdCompleted(this, new getFinMonitorRiskByContragentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkContragent", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("checkContragentItem", IsNullable=true)]
        public checkContragentItem[] checkContragent(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contragentId, 
                    string taxId, 
                    string lastNameUkr, 
                    string firstNameUkr, 
                    string middleNameUkr, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string docSr, 
                    string docNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime docIssueDate, 
                    string docIssPlace, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] System.Nullable<System.DateTime> docEndDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool docEndDateSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string recordNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth, 
                    string residence, 
                    string taxAdmCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string gender, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string finBlock, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrKOATUUCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrKOATUUClass, 
                    string addrCountry, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrPostCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrCityType, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrCity, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrRegion, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrRegionName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrDistrict, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrStreet, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrHouseNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrFlat, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrBuildNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrKOATUUCodeJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AddrKOATUUClassJur, 
                    string addrCountryJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrPostcodeJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AddrCityTypeJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrCityJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrRegionJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrRegionNameJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrDistrictJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrStreetJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrHouseNoJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrFlatJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrBuildNoJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf1Home, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf2Cellur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf3Work, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf4Fax, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf5EMail, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf6RegAddr, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf7StaffDw, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf8ContPer, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contPersType, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contPersName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string k013, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string k050, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string k060, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string k070, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string k110, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrTaxId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrStateRegisterCountry, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] System.Nullable<System.DateTime> taxRegDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool taxRegDateSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string placeOfBirth, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string modifiedBy, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nationality, 
                    string docTypeId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string isCardContragent, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstNameEng, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastNameEng, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxCategory, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string additionalInfo1, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string additionalInfo2, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string toboId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string relManager, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fatcaQuest, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool fatcaQuestSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fatcaStatus, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool fatcaStatusSpecified, 
                    string externalSystem, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string applicationType) {
            object[] results = this.Invoke("checkContragent", new object[] {
                        contragentId,
                        taxId,
                        lastNameUkr,
                        firstNameUkr,
                        middleNameUkr,
                        docSr,
                        docNo,
                        docIssueDate,
                        docIssPlace,
                        docEndDate,
                        docEndDateSpecified,
                        recordNo,
                        dateOfBirth,
                        residence,
                        taxAdmCode,
                        gender,
                        finBlock,
                        addrKOATUUCode,
                        addrKOATUUClass,
                        addrCountry,
                        addrPostCode,
                        addrCityType,
                        addrCity,
                        addrRegion,
                        addrRegionName,
                        addrDistrict,
                        addrStreet,
                        addrHouseNo,
                        addrFlat,
                        addrBuildNo,
                        addrKOATUUCodeJur,
                        AddrKOATUUClassJur,
                        addrCountryJur,
                        addrPostcodeJur,
                        AddrCityTypeJur,
                        addrCityJur,
                        addrRegionJur,
                        addrRegionNameJur,
                        addrDistrictJur,
                        addrStreetJur,
                        addrHouseNoJur,
                        addrFlatJur,
                        addrBuildNoJur,
                        contInf1Home,
                        contInf2Cellur,
                        contInf3Work,
                        contInf4Fax,
                        contInf5EMail,
                        contInf6RegAddr,
                        contInf7StaffDw,
                        contInf8ContPer,
                        contPersType,
                        contPersName,
                        k013,
                        k050,
                        k060,
                        k070,
                        k110,
                        nrTaxId,
                        nrStateRegisterCountry,
                        taxRegDate,
                        taxRegDateSpecified,
                        placeOfBirth,
                        modifiedBy,
                        nationality,
                        docTypeId,
                        isCardContragent,
                        firstNameEng,
                        lastNameEng,
                        taxCategory,
                        additionalInfo1,
                        additionalInfo2,
                        toboId,
                        relManager,
                        fatcaQuest,
                        fatcaQuestSpecified,
                        fatcaStatus,
                        fatcaStatusSpecified,
                        externalSystem,
                        applicationType});
            return ((checkContragentItem[])(results[0]));
        }
        
        /// <remarks/>
        public void checkContragentAsync(
                    string contragentId, 
                    string taxId, 
                    string lastNameUkr, 
                    string firstNameUkr, 
                    string middleNameUkr, 
                    string docSr, 
                    string docNo, 
                    System.DateTime docIssueDate, 
                    string docIssPlace, 
                    System.Nullable<System.DateTime> docEndDate, 
                    bool docEndDateSpecified, 
                    string recordNo, 
                    System.DateTime dateOfBirth, 
                    string residence, 
                    string taxAdmCode, 
                    string gender, 
                    string finBlock, 
                    string addrKOATUUCode, 
                    string addrKOATUUClass, 
                    string addrCountry, 
                    string addrPostCode, 
                    string addrCityType, 
                    string addrCity, 
                    string addrRegion, 
                    string addrRegionName, 
                    string addrDistrict, 
                    string addrStreet, 
                    string addrHouseNo, 
                    string addrFlat, 
                    string addrBuildNo, 
                    string addrKOATUUCodeJur, 
                    string AddrKOATUUClassJur, 
                    string addrCountryJur, 
                    string addrPostcodeJur, 
                    string AddrCityTypeJur, 
                    string addrCityJur, 
                    string addrRegionJur, 
                    string addrRegionNameJur, 
                    string addrDistrictJur, 
                    string addrStreetJur, 
                    string addrHouseNoJur, 
                    string addrFlatJur, 
                    string addrBuildNoJur, 
                    string contInf1Home, 
                    string contInf2Cellur, 
                    string contInf3Work, 
                    string contInf4Fax, 
                    string contInf5EMail, 
                    string contInf6RegAddr, 
                    string contInf7StaffDw, 
                    string contInf8ContPer, 
                    string contPersType, 
                    string contPersName, 
                    string k013, 
                    string k050, 
                    string k060, 
                    string k070, 
                    string k110, 
                    string nrTaxId, 
                    string nrStateRegisterCountry, 
                    System.Nullable<System.DateTime> taxRegDate, 
                    bool taxRegDateSpecified, 
                    string placeOfBirth, 
                    string modifiedBy, 
                    string nationality, 
                    string docTypeId, 
                    string isCardContragent, 
                    string firstNameEng, 
                    string lastNameEng, 
                    string taxCategory, 
                    string additionalInfo1, 
                    string additionalInfo2, 
                    string toboId, 
                    string relManager, 
                    System.Nullable<int> fatcaQuest, 
                    bool fatcaQuestSpecified, 
                    System.Nullable<int> fatcaStatus, 
                    bool fatcaStatusSpecified, 
                    string externalSystem, 
                    string applicationType) {
            this.checkContragentAsync(contragentId, taxId, lastNameUkr, firstNameUkr, middleNameUkr, docSr, docNo, docIssueDate, docIssPlace, docEndDate, docEndDateSpecified, recordNo, dateOfBirth, residence, taxAdmCode, gender, finBlock, addrKOATUUCode, addrKOATUUClass, addrCountry, addrPostCode, addrCityType, addrCity, addrRegion, addrRegionName, addrDistrict, addrStreet, addrHouseNo, addrFlat, addrBuildNo, addrKOATUUCodeJur, AddrKOATUUClassJur, addrCountryJur, addrPostcodeJur, AddrCityTypeJur, addrCityJur, addrRegionJur, addrRegionNameJur, addrDistrictJur, addrStreetJur, addrHouseNoJur, addrFlatJur, addrBuildNoJur, contInf1Home, contInf2Cellur, contInf3Work, contInf4Fax, contInf5EMail, contInf6RegAddr, contInf7StaffDw, contInf8ContPer, contPersType, contPersName, k013, k050, k060, k070, k110, nrTaxId, nrStateRegisterCountry, taxRegDate, taxRegDateSpecified, placeOfBirth, modifiedBy, nationality, docTypeId, isCardContragent, firstNameEng, lastNameEng, taxCategory, additionalInfo1, additionalInfo2, toboId, relManager, fatcaQuest, fatcaQuestSpecified, fatcaStatus, fatcaStatusSpecified, externalSystem, applicationType, null);
        }
        
        /// <remarks/>
        public void checkContragentAsync(
                    string contragentId, 
                    string taxId, 
                    string lastNameUkr, 
                    string firstNameUkr, 
                    string middleNameUkr, 
                    string docSr, 
                    string docNo, 
                    System.DateTime docIssueDate, 
                    string docIssPlace, 
                    System.Nullable<System.DateTime> docEndDate, 
                    bool docEndDateSpecified, 
                    string recordNo, 
                    System.DateTime dateOfBirth, 
                    string residence, 
                    string taxAdmCode, 
                    string gender, 
                    string finBlock, 
                    string addrKOATUUCode, 
                    string addrKOATUUClass, 
                    string addrCountry, 
                    string addrPostCode, 
                    string addrCityType, 
                    string addrCity, 
                    string addrRegion, 
                    string addrRegionName, 
                    string addrDistrict, 
                    string addrStreet, 
                    string addrHouseNo, 
                    string addrFlat, 
                    string addrBuildNo, 
                    string addrKOATUUCodeJur, 
                    string AddrKOATUUClassJur, 
                    string addrCountryJur, 
                    string addrPostcodeJur, 
                    string AddrCityTypeJur, 
                    string addrCityJur, 
                    string addrRegionJur, 
                    string addrRegionNameJur, 
                    string addrDistrictJur, 
                    string addrStreetJur, 
                    string addrHouseNoJur, 
                    string addrFlatJur, 
                    string addrBuildNoJur, 
                    string contInf1Home, 
                    string contInf2Cellur, 
                    string contInf3Work, 
                    string contInf4Fax, 
                    string contInf5EMail, 
                    string contInf6RegAddr, 
                    string contInf7StaffDw, 
                    string contInf8ContPer, 
                    string contPersType, 
                    string contPersName, 
                    string k013, 
                    string k050, 
                    string k060, 
                    string k070, 
                    string k110, 
                    string nrTaxId, 
                    string nrStateRegisterCountry, 
                    System.Nullable<System.DateTime> taxRegDate, 
                    bool taxRegDateSpecified, 
                    string placeOfBirth, 
                    string modifiedBy, 
                    string nationality, 
                    string docTypeId, 
                    string isCardContragent, 
                    string firstNameEng, 
                    string lastNameEng, 
                    string taxCategory, 
                    string additionalInfo1, 
                    string additionalInfo2, 
                    string toboId, 
                    string relManager, 
                    System.Nullable<int> fatcaQuest, 
                    bool fatcaQuestSpecified, 
                    System.Nullable<int> fatcaStatus, 
                    bool fatcaStatusSpecified, 
                    string externalSystem, 
                    string applicationType, 
                    object userState) {
            if ((this.checkContragentOperationCompleted == null)) {
                this.checkContragentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckContragentOperationCompleted);
            }
            this.InvokeAsync("checkContragent", new object[] {
                        contragentId,
                        taxId,
                        lastNameUkr,
                        firstNameUkr,
                        middleNameUkr,
                        docSr,
                        docNo,
                        docIssueDate,
                        docIssPlace,
                        docEndDate,
                        docEndDateSpecified,
                        recordNo,
                        dateOfBirth,
                        residence,
                        taxAdmCode,
                        gender,
                        finBlock,
                        addrKOATUUCode,
                        addrKOATUUClass,
                        addrCountry,
                        addrPostCode,
                        addrCityType,
                        addrCity,
                        addrRegion,
                        addrRegionName,
                        addrDistrict,
                        addrStreet,
                        addrHouseNo,
                        addrFlat,
                        addrBuildNo,
                        addrKOATUUCodeJur,
                        AddrKOATUUClassJur,
                        addrCountryJur,
                        addrPostcodeJur,
                        AddrCityTypeJur,
                        addrCityJur,
                        addrRegionJur,
                        addrRegionNameJur,
                        addrDistrictJur,
                        addrStreetJur,
                        addrHouseNoJur,
                        addrFlatJur,
                        addrBuildNoJur,
                        contInf1Home,
                        contInf2Cellur,
                        contInf3Work,
                        contInf4Fax,
                        contInf5EMail,
                        contInf6RegAddr,
                        contInf7StaffDw,
                        contInf8ContPer,
                        contPersType,
                        contPersName,
                        k013,
                        k050,
                        k060,
                        k070,
                        k110,
                        nrTaxId,
                        nrStateRegisterCountry,
                        taxRegDate,
                        taxRegDateSpecified,
                        placeOfBirth,
                        modifiedBy,
                        nationality,
                        docTypeId,
                        isCardContragent,
                        firstNameEng,
                        lastNameEng,
                        taxCategory,
                        additionalInfo1,
                        additionalInfo2,
                        toboId,
                        relManager,
                        fatcaQuest,
                        fatcaQuestSpecified,
                        fatcaStatus,
                        fatcaStatusSpecified,
                        externalSystem,
                        applicationType}, this.checkContragentOperationCompleted, userState);
        }
        
        private void OncheckContragentOperationCompleted(object arg) {
            if ((this.checkContragentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkContragentCompleted(this, new checkContragentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkCodeD5CodeD6", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("checkCodeD5CodeD6Item", IsNullable=true)]
        public checkCodeD5CodeD6Item[] checkCodeD5CodeD6(string residence, string k070, string k050, string k110_1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string balanceAccount) {
            object[] results = this.Invoke("checkCodeD5CodeD6", new object[] {
                        residence,
                        k070,
                        k050,
                        k110_1,
                        balanceAccount});
            return ((checkCodeD5CodeD6Item[])(results[0]));
        }
        
        /// <remarks/>
        public void checkCodeD5CodeD6Async(string residence, string k070, string k050, string k110_1, string balanceAccount) {
            this.checkCodeD5CodeD6Async(residence, k070, k050, k110_1, balanceAccount, null);
        }
        
        /// <remarks/>
        public void checkCodeD5CodeD6Async(string residence, string k070, string k050, string k110_1, string balanceAccount, object userState) {
            if ((this.checkCodeD5CodeD6OperationCompleted == null)) {
                this.checkCodeD5CodeD6OperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckCodeD5CodeD6OperationCompleted);
            }
            this.InvokeAsync("checkCodeD5CodeD6", new object[] {
                        residence,
                        k070,
                        k050,
                        k110_1,
                        balanceAccount}, this.checkCodeD5CodeD6OperationCompleted, userState);
        }
        
        private void OncheckCodeD5CodeD6OperationCompleted(object arg) {
            if ((this.checkCodeD5CodeD6Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkCodeD5CodeD6Completed(this, new checkCodeD5CodeD6CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getContactByTaxId", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getContactByTaxIdItem", IsNullable=true)]
        public getContactByTaxIdItem[] getContactByTaxId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<long> taxId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool taxIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contactType) {
            object[] results = this.Invoke("getContactByTaxId", new object[] {
                        taxId,
                        taxIdSpecified,
                        contactType});
            return ((getContactByTaxIdItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getContactByTaxIdAsync(System.Nullable<long> taxId, bool taxIdSpecified, string contactType) {
            this.getContactByTaxIdAsync(taxId, taxIdSpecified, contactType, null);
        }
        
        /// <remarks/>
        public void getContactByTaxIdAsync(System.Nullable<long> taxId, bool taxIdSpecified, string contactType, object userState) {
            if ((this.getContactByTaxIdOperationCompleted == null)) {
                this.getContactByTaxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContactByTaxIdOperationCompleted);
            }
            this.InvokeAsync("getContactByTaxId", new object[] {
                        taxId,
                        taxIdSpecified,
                        contactType}, this.getContactByTaxIdOperationCompleted, userState);
        }
        
        private void OngetContactByTaxIdOperationCompleted(object arg) {
            if ((this.getContactByTaxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContactByTaxIdCompleted(this, new getContactByTaxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getContragentRelations", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getContragentRelationsItem", IsNullable=true)]
        public getContragentRelationsItem[] getContragentRelations([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contragentId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string relativeSector) {
            object[] results = this.Invoke("getContragentRelations", new object[] {
                        contragentId,
                        relativeSector});
            return ((getContragentRelationsItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getContragentRelationsAsync(string contragentId, string relativeSector) {
            this.getContragentRelationsAsync(contragentId, relativeSector, null);
        }
        
        /// <remarks/>
        public void getContragentRelationsAsync(string contragentId, string relativeSector, object userState) {
            if ((this.getContragentRelationsOperationCompleted == null)) {
                this.getContragentRelationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContragentRelationsOperationCompleted);
            }
            this.InvokeAsync("getContragentRelations", new object[] {
                        contragentId,
                        relativeSector}, this.getContragentRelationsOperationCompleted, userState);
        }
        
        private void OngetContragentRelationsOperationCompleted(object arg) {
            if ((this.getContragentRelationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContragentRelationsCompleted(this, new getContragentRelationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:identifyContragentByDeal", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("identifyContragentByDealItem", IsNullable=true)]
        public identifyContragentByDealItem[] identifyContragentByDeal([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string searchString) {
            object[] results = this.Invoke("identifyContragentByDeal", new object[] {
                        searchString});
            return ((identifyContragentByDealItem[])(results[0]));
        }
        
        /// <remarks/>
        public void identifyContragentByDealAsync(string searchString) {
            this.identifyContragentByDealAsync(searchString, null);
        }
        
        /// <remarks/>
        public void identifyContragentByDealAsync(string searchString, object userState) {
            if ((this.identifyContragentByDealOperationCompleted == null)) {
                this.identifyContragentByDealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnidentifyContragentByDealOperationCompleted);
            }
            this.InvokeAsync("identifyContragentByDeal", new object[] {
                        searchString}, this.identifyContragentByDealOperationCompleted, userState);
        }
        
        private void OnidentifyContragentByDealOperationCompleted(object arg) {
            if ((this.identifyContragentByDealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.identifyContragentByDealCompleted(this, new identifyContragentByDealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:searchContragent2", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("contragent", IsNullable=true)]
        public contragent[] searchContragent2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contragentId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string docSr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string docNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contragentCategory) {
            object[] results = this.Invoke("searchContragent2", new object[] {
                        contragentId,
                        taxId,
                        docSr,
                        docNo,
                        sName,
                        name,
                        contragentCategory});
            return ((contragent[])(results[0]));
        }
        
        /// <remarks/>
        public void searchContragent2Async(string contragentId, string taxId, string docSr, string docNo, string sName, string name, string contragentCategory) {
            this.searchContragent2Async(contragentId, taxId, docSr, docNo, sName, name, contragentCategory, null);
        }
        
        /// <remarks/>
        public void searchContragent2Async(string contragentId, string taxId, string docSr, string docNo, string sName, string name, string contragentCategory, object userState) {
            if ((this.searchContragent2OperationCompleted == null)) {
                this.searchContragent2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchContragent2OperationCompleted);
            }
            this.InvokeAsync("searchContragent2", new object[] {
                        contragentId,
                        taxId,
                        docSr,
                        docNo,
                        sName,
                        name,
                        contragentCategory}, this.searchContragent2OperationCompleted, userState);
        }
        
        private void OnsearchContragent2OperationCompleted(object arg) {
            if ((this.searchContragent2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchContragent2Completed(this, new searchContragent2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getContragentById", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("contragent", IsNullable=true)]
        public contragent[] getContragentById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Id) {
            object[] results = this.Invoke("getContragentById", new object[] {
                        Id});
            return ((contragent[])(results[0]));
        }
        
        /// <remarks/>
        public void getContragentByIdAsync(string Id) {
            this.getContragentByIdAsync(Id, null);
        }
        
        /// <remarks/>
        public void getContragentByIdAsync(string Id, object userState) {
            if ((this.getContragentByIdOperationCompleted == null)) {
                this.getContragentByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContragentByIdOperationCompleted);
            }
            this.InvokeAsync("getContragentById", new object[] {
                        Id}, this.getContragentByIdOperationCompleted, userState);
        }
        
        private void OngetContragentByIdOperationCompleted(object arg) {
            if ((this.getContragentByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContragentByIdCompleted(this, new getContragentByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getCustomerProfileFull", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("customerProfileFull", IsNullable=true)]
        public customerProfileFull[] getCustomerProfileFull([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxId) {
            object[] results = this.Invoke("getCustomerProfileFull", new object[] {
                        taxId});
            return ((customerProfileFull[])(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerProfileFullAsync(string taxId) {
            this.getCustomerProfileFullAsync(taxId, null);
        }
        
        /// <remarks/>
        public void getCustomerProfileFullAsync(string taxId, object userState) {
            if ((this.getCustomerProfileFullOperationCompleted == null)) {
                this.getCustomerProfileFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerProfileFullOperationCompleted);
            }
            this.InvokeAsync("getCustomerProfileFull", new object[] {
                        taxId}, this.getCustomerProfileFullOperationCompleted, userState);
        }
        
        private void OngetCustomerProfileFullOperationCompleted(object arg) {
            if ((this.getCustomerProfileFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerProfileFullCompleted(this, new getCustomerProfileFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getCustomerProfileByTaxId", RequestNamespace="http://sab/", ResponseElementName="getCustomerProfileByTaxIdResponce", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getCustomerProfileByTaxIdItem", IsNullable=true)]
        public getCustomerProfileByTaxIdItem[] getCustomerProfileByTaxId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxId) {
            object[] results = this.Invoke("getCustomerProfileByTaxId", new object[] {
                        taxId});
            return ((getCustomerProfileByTaxIdItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerProfileByTaxIdAsync(string taxId) {
            this.getCustomerProfileByTaxIdAsync(taxId, null);
        }
        
        /// <remarks/>
        public void getCustomerProfileByTaxIdAsync(string taxId, object userState) {
            if ((this.getCustomerProfileByTaxIdOperationCompleted == null)) {
                this.getCustomerProfileByTaxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerProfileByTaxIdOperationCompleted);
            }
            this.InvokeAsync("getCustomerProfileByTaxId", new object[] {
                        taxId}, this.getCustomerProfileByTaxIdOperationCompleted, userState);
        }
        
        private void OngetCustomerProfileByTaxIdOperationCompleted(object arg) {
            if ((this.getCustomerProfileByTaxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerProfileByTaxIdCompleted(this, new getCustomerProfileByTaxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:registerCardDeal", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("registerCardDealItem", IsNullable=true)]
        public registerCardDealItem[] registerCardDeal([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contragentId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsCardContragent) {
            object[] results = this.Invoke("registerCardDeal", new object[] {
                        contragentId,
                        IsCardContragent});
            return ((registerCardDealItem[])(results[0]));
        }
        
        /// <remarks/>
        public void registerCardDealAsync(string contragentId, string IsCardContragent) {
            this.registerCardDealAsync(contragentId, IsCardContragent, null);
        }
        
        /// <remarks/>
        public void registerCardDealAsync(string contragentId, string IsCardContragent, object userState) {
            if ((this.registerCardDealOperationCompleted == null)) {
                this.registerCardDealOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterCardDealOperationCompleted);
            }
            this.InvokeAsync("registerCardDeal", new object[] {
                        contragentId,
                        IsCardContragent}, this.registerCardDealOperationCompleted, userState);
        }
        
        private void OnregisterCardDealOperationCompleted(object arg) {
            if ((this.registerCardDealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerCardDealCompleted(this, new registerCardDealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:registerContragent", RequestNamespace="http://sab/", ResponseElementName="registerContragentResponses", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("registerContragentResponse", IsNullable=true)]
        public registerContragentResponse[] registerContragent(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contragentId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastNameUkr, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstNameUkr, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string middleNameUkr, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string docSr, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string docNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] System.Nullable<System.DateTime> docIssueDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool docIssueDateSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string docIssPlace, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] System.Nullable<System.DateTime> docEndDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool docEndDateSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string recordNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] System.Nullable<System.DateTime> dateOfBirth, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool dateOfBirthSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string residence, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrStateRegisterCountry, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxAdmCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrCountry, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrPostcode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrCity, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrRegion, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrRegionName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrDistrict, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrStreet, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrHouseNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrFlat, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrBuildNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrCountryJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrPostcodeJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrCityJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrRegionJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrRegionNameJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrDistrictJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrStreetJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrHouseNoJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrFlatJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrBuildNoJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf1Home, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf2Cellur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf3Work, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf4Fax, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf5Email, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf6Regaddrhf, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf7Staffdwp, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contInf8Contperph, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contPersType, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contPersName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string k060, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string k070, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nrTaxId, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] System.Nullable<System.DateTime> taxRegDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool taxRegDateSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string placeOfBirth, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cardProduct, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> identification, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool identificationSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string modifiedBy, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nationality, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string docTypeId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string isCardContragent, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstNameEng, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastNameEng, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxCategory, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string workTypesCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string workTypesText, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string workTypesTaxReg, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string stateRegDocSrNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string positionTypesCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string positionTypesText, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sectorClassificationCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sectorClassificationText, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string incomeSourcesCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string incomeSourcesText, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string incomeLevelsCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string propertyTypesCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string bankProductsCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string workPlace, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string accountsInOtherBanks, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string isPublicPerson, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string controller, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string activityTypes, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string additionalInfo1, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string additionalInfo2, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] System.Nullable<System.DateTime> signDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool signDateSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrKOATUUCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> addrKOATUUClass, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool addrKOATUUClassSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrCityType, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrKOATUUCodeJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> addrKOATUUClassJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool addrKOATUUClassJurSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addrCityTypeJur, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string gender, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string externalSystem, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> finnClass, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool finnClassSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string applicationType, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fatcaQuest, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool fatcaQuestSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> fatcaStatus, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool fatcaStatusSpecified) {
            object[] results = this.Invoke("registerContragent", new object[] {
                        contragentId,
                        taxId,
                        lastNameUkr,
                        firstNameUkr,
                        middleNameUkr,
                        docSr,
                        docNo,
                        docIssueDate,
                        docIssueDateSpecified,
                        docIssPlace,
                        docEndDate,
                        docEndDateSpecified,
                        recordNo,
                        dateOfBirth,
                        dateOfBirthSpecified,
                        residence,
                        nrStateRegisterCountry,
                        taxAdmCode,
                        addrCountry,
                        addrPostcode,
                        addrCity,
                        addrRegion,
                        addrRegionName,
                        addrDistrict,
                        addrStreet,
                        addrHouseNo,
                        addrFlat,
                        addrBuildNo,
                        addrCountryJur,
                        addrPostcodeJur,
                        addrCityJur,
                        addrRegionJur,
                        addrRegionNameJur,
                        addrDistrictJur,
                        addrStreetJur,
                        addrHouseNoJur,
                        addrFlatJur,
                        addrBuildNoJur,
                        contInf1Home,
                        contInf2Cellur,
                        contInf3Work,
                        contInf4Fax,
                        contInf5Email,
                        contInf6Regaddrhf,
                        contInf7Staffdwp,
                        contInf8Contperph,
                        contPersType,
                        contPersName,
                        k060,
                        k070,
                        nrTaxId,
                        taxRegDate,
                        taxRegDateSpecified,
                        placeOfBirth,
                        cardProduct,
                        identification,
                        identificationSpecified,
                        modifiedBy,
                        nationality,
                        docTypeId,
                        isCardContragent,
                        firstNameEng,
                        lastNameEng,
                        taxCategory,
                        workTypesCode,
                        workTypesText,
                        workTypesTaxReg,
                        stateRegDocSrNo,
                        positionTypesCode,
                        positionTypesText,
                        sectorClassificationCode,
                        sectorClassificationText,
                        incomeSourcesCode,
                        incomeSourcesText,
                        incomeLevelsCode,
                        propertyTypesCode,
                        bankProductsCode,
                        workPlace,
                        accountsInOtherBanks,
                        isPublicPerson,
                        controller,
                        activityTypes,
                        additionalInfo1,
                        additionalInfo2,
                        signDate,
                        signDateSpecified,
                        addrKOATUUCode,
                        addrKOATUUClass,
                        addrKOATUUClassSpecified,
                        addrCityType,
                        addrKOATUUCodeJur,
                        addrKOATUUClassJur,
                        addrKOATUUClassJurSpecified,
                        addrCityTypeJur,
                        gender,
                        externalSystem,
                        finnClass,
                        finnClassSpecified,
                        applicationType,
                        fatcaQuest,
                        fatcaQuestSpecified,
                        fatcaStatus,
                        fatcaStatusSpecified});
            return ((registerContragentResponse[])(results[0]));
        }
        
        /// <remarks/>
        public void registerContragentAsync(
                    string contragentId, 
                    string taxId, 
                    string lastNameUkr, 
                    string firstNameUkr, 
                    string middleNameUkr, 
                    string docSr, 
                    string docNo, 
                    System.Nullable<System.DateTime> docIssueDate, 
                    bool docIssueDateSpecified, 
                    string docIssPlace, 
                    System.Nullable<System.DateTime> docEndDate, 
                    bool docEndDateSpecified, 
                    string recordNo, 
                    System.Nullable<System.DateTime> dateOfBirth, 
                    bool dateOfBirthSpecified, 
                    string residence, 
                    string nrStateRegisterCountry, 
                    string taxAdmCode, 
                    string addrCountry, 
                    string addrPostcode, 
                    string addrCity, 
                    string addrRegion, 
                    string addrRegionName, 
                    string addrDistrict, 
                    string addrStreet, 
                    string addrHouseNo, 
                    string addrFlat, 
                    string addrBuildNo, 
                    string addrCountryJur, 
                    string addrPostcodeJur, 
                    string addrCityJur, 
                    string addrRegionJur, 
                    string addrRegionNameJur, 
                    string addrDistrictJur, 
                    string addrStreetJur, 
                    string addrHouseNoJur, 
                    string addrFlatJur, 
                    string addrBuildNoJur, 
                    string contInf1Home, 
                    string contInf2Cellur, 
                    string contInf3Work, 
                    string contInf4Fax, 
                    string contInf5Email, 
                    string contInf6Regaddrhf, 
                    string contInf7Staffdwp, 
                    string contInf8Contperph, 
                    string contPersType, 
                    string contPersName, 
                    string k060, 
                    string k070, 
                    string nrTaxId, 
                    System.Nullable<System.DateTime> taxRegDate, 
                    bool taxRegDateSpecified, 
                    string placeOfBirth, 
                    string cardProduct, 
                    System.Nullable<int> identification, 
                    bool identificationSpecified, 
                    string modifiedBy, 
                    string nationality, 
                    string docTypeId, 
                    string isCardContragent, 
                    string firstNameEng, 
                    string lastNameEng, 
                    string taxCategory, 
                    string workTypesCode, 
                    string workTypesText, 
                    string workTypesTaxReg, 
                    string stateRegDocSrNo, 
                    string positionTypesCode, 
                    string positionTypesText, 
                    string sectorClassificationCode, 
                    string sectorClassificationText, 
                    string incomeSourcesCode, 
                    string incomeSourcesText, 
                    string incomeLevelsCode, 
                    string propertyTypesCode, 
                    string bankProductsCode, 
                    string workPlace, 
                    string accountsInOtherBanks, 
                    string isPublicPerson, 
                    string controller, 
                    string activityTypes, 
                    string additionalInfo1, 
                    string additionalInfo2, 
                    System.Nullable<System.DateTime> signDate, 
                    bool signDateSpecified, 
                    string addrKOATUUCode, 
                    System.Nullable<int> addrKOATUUClass, 
                    bool addrKOATUUClassSpecified, 
                    string addrCityType, 
                    string addrKOATUUCodeJur, 
                    System.Nullable<int> addrKOATUUClassJur, 
                    bool addrKOATUUClassJurSpecified, 
                    string addrCityTypeJur, 
                    string gender, 
                    string externalSystem, 
                    System.Nullable<int> finnClass, 
                    bool finnClassSpecified, 
                    string applicationType, 
                    System.Nullable<int> fatcaQuest, 
                    bool fatcaQuestSpecified, 
                    System.Nullable<int> fatcaStatus, 
                    bool fatcaStatusSpecified) {
            this.registerContragentAsync(contragentId, taxId, lastNameUkr, firstNameUkr, middleNameUkr, docSr, docNo, docIssueDate, docIssueDateSpecified, docIssPlace, docEndDate, docEndDateSpecified, recordNo, dateOfBirth, dateOfBirthSpecified, residence, nrStateRegisterCountry, taxAdmCode, addrCountry, addrPostcode, addrCity, addrRegion, addrRegionName, addrDistrict, addrStreet, addrHouseNo, addrFlat, addrBuildNo, addrCountryJur, addrPostcodeJur, addrCityJur, addrRegionJur, addrRegionNameJur, addrDistrictJur, addrStreetJur, addrHouseNoJur, addrFlatJur, addrBuildNoJur, contInf1Home, contInf2Cellur, contInf3Work, contInf4Fax, contInf5Email, contInf6Regaddrhf, contInf7Staffdwp, contInf8Contperph, contPersType, contPersName, k060, k070, nrTaxId, taxRegDate, taxRegDateSpecified, placeOfBirth, cardProduct, identification, identificationSpecified, modifiedBy, nationality, docTypeId, isCardContragent, firstNameEng, lastNameEng, taxCategory, workTypesCode, workTypesText, workTypesTaxReg, stateRegDocSrNo, positionTypesCode, positionTypesText, sectorClassificationCode, sectorClassificationText, incomeSourcesCode, incomeSourcesText, incomeLevelsCode, propertyTypesCode, bankProductsCode, workPlace, accountsInOtherBanks, isPublicPerson, controller, activityTypes, additionalInfo1, additionalInfo2, signDate, signDateSpecified, addrKOATUUCode, addrKOATUUClass, addrKOATUUClassSpecified, addrCityType, addrKOATUUCodeJur, addrKOATUUClassJur, addrKOATUUClassJurSpecified, addrCityTypeJur, gender, externalSystem, finnClass, finnClassSpecified, applicationType, fatcaQuest, fatcaQuestSpecified, fatcaStatus, fatcaStatusSpecified, null);
        }
        
        /// <remarks/>
        public void registerContragentAsync(
                    string contragentId, 
                    string taxId, 
                    string lastNameUkr, 
                    string firstNameUkr, 
                    string middleNameUkr, 
                    string docSr, 
                    string docNo, 
                    System.Nullable<System.DateTime> docIssueDate, 
                    bool docIssueDateSpecified, 
                    string docIssPlace, 
                    System.Nullable<System.DateTime> docEndDate, 
                    bool docEndDateSpecified, 
                    string recordNo, 
                    System.Nullable<System.DateTime> dateOfBirth, 
                    bool dateOfBirthSpecified, 
                    string residence, 
                    string nrStateRegisterCountry, 
                    string taxAdmCode, 
                    string addrCountry, 
                    string addrPostcode, 
                    string addrCity, 
                    string addrRegion, 
                    string addrRegionName, 
                    string addrDistrict, 
                    string addrStreet, 
                    string addrHouseNo, 
                    string addrFlat, 
                    string addrBuildNo, 
                    string addrCountryJur, 
                    string addrPostcodeJur, 
                    string addrCityJur, 
                    string addrRegionJur, 
                    string addrRegionNameJur, 
                    string addrDistrictJur, 
                    string addrStreetJur, 
                    string addrHouseNoJur, 
                    string addrFlatJur, 
                    string addrBuildNoJur, 
                    string contInf1Home, 
                    string contInf2Cellur, 
                    string contInf3Work, 
                    string contInf4Fax, 
                    string contInf5Email, 
                    string contInf6Regaddrhf, 
                    string contInf7Staffdwp, 
                    string contInf8Contperph, 
                    string contPersType, 
                    string contPersName, 
                    string k060, 
                    string k070, 
                    string nrTaxId, 
                    System.Nullable<System.DateTime> taxRegDate, 
                    bool taxRegDateSpecified, 
                    string placeOfBirth, 
                    string cardProduct, 
                    System.Nullable<int> identification, 
                    bool identificationSpecified, 
                    string modifiedBy, 
                    string nationality, 
                    string docTypeId, 
                    string isCardContragent, 
                    string firstNameEng, 
                    string lastNameEng, 
                    string taxCategory, 
                    string workTypesCode, 
                    string workTypesText, 
                    string workTypesTaxReg, 
                    string stateRegDocSrNo, 
                    string positionTypesCode, 
                    string positionTypesText, 
                    string sectorClassificationCode, 
                    string sectorClassificationText, 
                    string incomeSourcesCode, 
                    string incomeSourcesText, 
                    string incomeLevelsCode, 
                    string propertyTypesCode, 
                    string bankProductsCode, 
                    string workPlace, 
                    string accountsInOtherBanks, 
                    string isPublicPerson, 
                    string controller, 
                    string activityTypes, 
                    string additionalInfo1, 
                    string additionalInfo2, 
                    System.Nullable<System.DateTime> signDate, 
                    bool signDateSpecified, 
                    string addrKOATUUCode, 
                    System.Nullable<int> addrKOATUUClass, 
                    bool addrKOATUUClassSpecified, 
                    string addrCityType, 
                    string addrKOATUUCodeJur, 
                    System.Nullable<int> addrKOATUUClassJur, 
                    bool addrKOATUUClassJurSpecified, 
                    string addrCityTypeJur, 
                    string gender, 
                    string externalSystem, 
                    System.Nullable<int> finnClass, 
                    bool finnClassSpecified, 
                    string applicationType, 
                    System.Nullable<int> fatcaQuest, 
                    bool fatcaQuestSpecified, 
                    System.Nullable<int> fatcaStatus, 
                    bool fatcaStatusSpecified, 
                    object userState) {
            if ((this.registerContragentOperationCompleted == null)) {
                this.registerContragentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterContragentOperationCompleted);
            }
            this.InvokeAsync("registerContragent", new object[] {
                        contragentId,
                        taxId,
                        lastNameUkr,
                        firstNameUkr,
                        middleNameUkr,
                        docSr,
                        docNo,
                        docIssueDate,
                        docIssueDateSpecified,
                        docIssPlace,
                        docEndDate,
                        docEndDateSpecified,
                        recordNo,
                        dateOfBirth,
                        dateOfBirthSpecified,
                        residence,
                        nrStateRegisterCountry,
                        taxAdmCode,
                        addrCountry,
                        addrPostcode,
                        addrCity,
                        addrRegion,
                        addrRegionName,
                        addrDistrict,
                        addrStreet,
                        addrHouseNo,
                        addrFlat,
                        addrBuildNo,
                        addrCountryJur,
                        addrPostcodeJur,
                        addrCityJur,
                        addrRegionJur,
                        addrRegionNameJur,
                        addrDistrictJur,
                        addrStreetJur,
                        addrHouseNoJur,
                        addrFlatJur,
                        addrBuildNoJur,
                        contInf1Home,
                        contInf2Cellur,
                        contInf3Work,
                        contInf4Fax,
                        contInf5Email,
                        contInf6Regaddrhf,
                        contInf7Staffdwp,
                        contInf8Contperph,
                        contPersType,
                        contPersName,
                        k060,
                        k070,
                        nrTaxId,
                        taxRegDate,
                        taxRegDateSpecified,
                        placeOfBirth,
                        cardProduct,
                        identification,
                        identificationSpecified,
                        modifiedBy,
                        nationality,
                        docTypeId,
                        isCardContragent,
                        firstNameEng,
                        lastNameEng,
                        taxCategory,
                        workTypesCode,
                        workTypesText,
                        workTypesTaxReg,
                        stateRegDocSrNo,
                        positionTypesCode,
                        positionTypesText,
                        sectorClassificationCode,
                        sectorClassificationText,
                        incomeSourcesCode,
                        incomeSourcesText,
                        incomeLevelsCode,
                        propertyTypesCode,
                        bankProductsCode,
                        workPlace,
                        accountsInOtherBanks,
                        isPublicPerson,
                        controller,
                        activityTypes,
                        additionalInfo1,
                        additionalInfo2,
                        signDate,
                        signDateSpecified,
                        addrKOATUUCode,
                        addrKOATUUClass,
                        addrKOATUUClassSpecified,
                        addrCityType,
                        addrKOATUUCodeJur,
                        addrKOATUUClassJur,
                        addrKOATUUClassJurSpecified,
                        addrCityTypeJur,
                        gender,
                        externalSystem,
                        finnClass,
                        finnClassSpecified,
                        applicationType,
                        fatcaQuest,
                        fatcaQuestSpecified,
                        fatcaStatus,
                        fatcaStatusSpecified}, this.registerContragentOperationCompleted, userState);
        }
        
        private void OnregisterContragentOperationCompleted(object arg) {
            if ((this.registerContragentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerContragentCompleted(this, new registerContragentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:updateContragentTaxInfo", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateContragentTaxInfoItem", IsNullable=true)]
        public updateContragentTaxInfoItem[] updateContragentTaxInfo(string contragentId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxAdmCode, int taxCategory, string externalSystem) {
            object[] results = this.Invoke("updateContragentTaxInfo", new object[] {
                        contragentId,
                        taxAdmCode,
                        taxCategory,
                        externalSystem});
            return ((updateContragentTaxInfoItem[])(results[0]));
        }
        
        /// <remarks/>
        public void updateContragentTaxInfoAsync(string contragentId, string taxAdmCode, int taxCategory, string externalSystem) {
            this.updateContragentTaxInfoAsync(contragentId, taxAdmCode, taxCategory, externalSystem, null);
        }
        
        /// <remarks/>
        public void updateContragentTaxInfoAsync(string contragentId, string taxAdmCode, int taxCategory, string externalSystem, object userState) {
            if ((this.updateContragentTaxInfoOperationCompleted == null)) {
                this.updateContragentTaxInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateContragentTaxInfoOperationCompleted);
            }
            this.InvokeAsync("updateContragentTaxInfo", new object[] {
                        contragentId,
                        taxAdmCode,
                        taxCategory,
                        externalSystem}, this.updateContragentTaxInfoOperationCompleted, userState);
        }
        
        private void OnupdateContragentTaxInfoOperationCompleted(object arg) {
            if ((this.updateContragentTaxInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateContragentTaxInfoCompleted(this, new updateContragentTaxInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:searchContragentByAccountNo", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("searchContragentByAccountNoItem", IsNullable=true)]
        public searchContragentByAccountNoItem[] searchContragentByAccountNo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string accountNo) {
            object[] results = this.Invoke("searchContragentByAccountNo", new object[] {
                        accountNo});
            return ((searchContragentByAccountNoItem[])(results[0]));
        }
        
        /// <remarks/>
        public void searchContragentByAccountNoAsync(string accountNo) {
            this.searchContragentByAccountNoAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void searchContragentByAccountNoAsync(string accountNo, object userState) {
            if ((this.searchContragentByAccountNoOperationCompleted == null)) {
                this.searchContragentByAccountNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchContragentByAccountNoOperationCompleted);
            }
            this.InvokeAsync("searchContragentByAccountNo", new object[] {
                        accountNo}, this.searchContragentByAccountNoOperationCompleted, userState);
        }
        
        private void OnsearchContragentByAccountNoOperationCompleted(object arg) {
            if ((this.searchContragentByAccountNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchContragentByAccountNoCompleted(this, new searchContragentByAccountNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:searchContragentByDealNo", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("searchContragentByDealNoItem", IsNullable=true)]
        public searchContragentByDealNoItem[] searchContragentByDealNo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dealNo) {
            object[] results = this.Invoke("searchContragentByDealNo", new object[] {
                        dealNo});
            return ((searchContragentByDealNoItem[])(results[0]));
        }
        
        /// <remarks/>
        public void searchContragentByDealNoAsync(string dealNo) {
            this.searchContragentByDealNoAsync(dealNo, null);
        }
        
        /// <remarks/>
        public void searchContragentByDealNoAsync(string dealNo, object userState) {
            if ((this.searchContragentByDealNoOperationCompleted == null)) {
                this.searchContragentByDealNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchContragentByDealNoOperationCompleted);
            }
            this.InvokeAsync("searchContragentByDealNo", new object[] {
                        dealNo}, this.searchContragentByDealNoOperationCompleted, userState);
        }
        
        private void OnsearchContragentByDealNoOperationCompleted(object arg) {
            if ((this.searchContragentByDealNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchContragentByDealNoCompleted(this, new searchContragentByDealNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkResidenceChange", RequestNamespace="http://sab/", ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("checkResidenceChangeItem", IsNullable=true)]
        public checkResidenceChangeItem[] checkResidenceChange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contragentId) {
            object[] results = this.Invoke("checkResidenceChange", new object[] {
                        contragentId});
            return ((checkResidenceChangeItem[])(results[0]));
        }
        
        /// <remarks/>
        public void checkResidenceChangeAsync(string contragentId) {
            this.checkResidenceChangeAsync(contragentId, null);
        }
        
        /// <remarks/>
        public void checkResidenceChangeAsync(string contragentId, object userState) {
            if ((this.checkResidenceChangeOperationCompleted == null)) {
                this.checkResidenceChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckResidenceChangeOperationCompleted);
            }
            this.InvokeAsync("checkResidenceChange", new object[] {
                        contragentId}, this.checkResidenceChangeOperationCompleted, userState);
        }
        
        private void OncheckResidenceChangeOperationCompleted(object arg) {
            if ((this.checkResidenceChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkResidenceChangeCompleted(this, new checkResidenceChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getFinnClass", RequestNamespace="http://sab/",  ResponseNamespace="http://sab/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("contragent", IsNullable=true)]
        public contragent[] getFinnClass([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxId) {
            object[] results = this.Invoke("getFinnClass", new object[] {
                        taxId});
            return ((contragent[])(results[0]));
        }
        
        /// <remarks/>
        public void getFinnClassAsync(string taxId) {
            this.getFinnClassAsync(taxId, null);
        }
        
        /// <remarks/>
        public void getFinnClassAsync(string taxId, object userState) {
            if ((this.getFinnClassOperationCompleted == null)) {
                this.getFinnClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFinnClassOperationCompleted);
            }
            this.InvokeAsync("getFinnClass", new object[] {
                        taxId}, this.getFinnClassOperationCompleted, userState);
        }
        
        private void OngetFinnClassOperationCompleted(object arg) {
            if ((this.getFinnClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFinnClassCompleted(this, new getFinnClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class contragent {
        
        private string contragentIdField;
        
        private string taxIdField;
        
        private string lastNameUkrField;
        
        private string firstNameUkrField;
        
        private string middleNameUkrField;
        
        private string docSrField;
        
        private string docNoField;
        
        private System.Nullable<System.DateTime> docIssueDateField;
        
        private bool docIssueDateFieldSpecified;
        
        private string docIssPlaceField;
        
        private System.Nullable<System.DateTime> dateOfBirthField;
        
        private bool dateOfBirthFieldSpecified;
        
        private string placeOfBirthField;
        
        private string residenceField;
        
        private string taxAdmCodeField;
        
        private string addrCountryField;
        
        private string addrPostcodeField;
        
        private string addrCityField;
        
        private string addrRegionRcuCodeField;
        
        private string addrRegionField;
        
        private string addrDistrictField;
        
        private string addrStreetField;
        
        private string addrHouseNoField;
        
        private string addrFlatField;
        
        private string addrBuildNoField;
        
        private string addrCountryJurField;
        
        private string addrPostcodeJurField;
        
        private string addrCityJurField;
        
        private string addrRegionJurRcuCodeField;
        
        private string addrRegionJurField;
        
        private string addrDistrictJurField;
        
        private string addrStreetJurField;
        
        private string addrHouseNoJurField;
        
        private string addrFlatJurField;
        
        private string addrBuildNoJurField;
        
        private string addrCountryBusField;
        
        private string addrPostcodeBusField;
        
        private string addrCityBusField;
        
        private string addrRegionBusField;
        
        private string addrDistrictBusField;
        
        private string addrStreetBusField;
        
        private string addrHouseNoBusField;
        
        private string addrFlatBusField;
        
        private string addrBuildNoBusField;
        
        private string contInf1HomeField;
        
        private string contInf2CellurField;
        
        private string contInf3WorkField;
        
        private string contInf4FaxField;
        
        private string contInf5EmailField;
        
        private string contInf6RegaddrField;
        
        private string contInf7StaffdwField;
        
        private string contInf8ContperField;
        
        private string contPersNameField;
        
        private string contPersTypeField;
        
        private string k060Field;
        
        private string k070Field;
        
        private string nrTaxIdField;
        
        private System.Nullable<System.DateTime> taxRegDateField;
        
        private bool taxRegDateFieldSpecified;
        
        private string cardProductField;
        
        private System.Nullable<int> identificationField;
        
        private bool identificationFieldSpecified;
        
        private string statusField;
        
        private string statusTextField;
        
        private string modifiedByField;
        
        private System.Nullable<int> isVIPField;
        
        private bool isVIPFieldSpecified;
        
        private System.Nullable<int> isAClubField;
        
        private bool isAClubFieldSpecified;
        
        private string finBlockField;
        
        private string k050Field;
        
        private string nameUkrField;
        
        private string shortNameUkrField;
        
        private string contInf9URLField;
        
        private string accountOfficerField;
        
        private string sectorField;
        
        private string targetField;
        
        private string k110Field;
        
        private string creditRatingField;
        
        private string addressField;
        
        private string addressJurField;
        
        private string riskCategoryField;
        
        private string nameEngField;
        
        private System.Nullable<System.DateTime> bankRegDateField;
        
        private bool bankRegDateFieldSpecified;
        
        private string toboIdField;
        
        private string staRegAgencyField;
        
        private string addSubTypeField;
        
        private string industryField;
        
        private string k013Field;
        
        private string taxCategoryField;
        
        private string stateRegDocSrNoField;
        
        private string workTypesCodeField;
        
        private string workTypesTextField;
        
        private string workTypesTaxRegField;
        
        private string positionTypesCodeField;
        
        private string positionTypesTextField;
        
        private string sectorClassificationCodeField;
        
        private string sectorClassificationTextField;
        
        private string incomeSourcesCodeField;
        
        private string incomeSourcesTextField;
        
        private string incomeLevelsCodeField;
        
        private string propertyTypesCodeField;
        
        private string bankProductsCodeField;
        
        private string workPlaceField;
        
        private string accountsInOtherBanksField;
        
        private string isPublicPersonField;
        
        private string controllerField;
        
        private string activityTypesField;
        
        private string nationalityField;
        
        private string genderField;
        
        private string isCardContragentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentId {
            get {
                return this.contragentIdField;
            }
            set {
                this.contragentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string taxId {
            get {
                return this.taxIdField;
            }
            set {
                this.taxIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastNameUkr {
            get {
                return this.lastNameUkrField;
            }
            set {
                this.lastNameUkrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstNameUkr {
            get {
                return this.firstNameUkrField;
            }
            set {
                this.firstNameUkrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string middleNameUkr {
            get {
                return this.middleNameUkrField;
            }
            set {
                this.middleNameUkrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string docSr {
            get {
                return this.docSrField;
            }
            set {
                this.docSrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string docNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> docIssueDate {
            get {
                return this.docIssueDateField;
            }
            set {
                this.docIssueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool docIssueDateSpecified {
            get {
                return this.docIssueDateFieldSpecified;
            }
            set {
                this.docIssueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string docIssPlace {
            get {
                return this.docIssPlaceField;
            }
            set {
                this.docIssPlaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> dateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                this.dateOfBirthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateOfBirthSpecified {
            get {
                return this.dateOfBirthFieldSpecified;
            }
            set {
                this.dateOfBirthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string placeOfBirth {
            get {
                return this.placeOfBirthField;
            }
            set {
                this.placeOfBirthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string residence {
            get {
                return this.residenceField;
            }
            set {
                this.residenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string taxAdmCode {
            get {
                return this.taxAdmCodeField;
            }
            set {
                this.taxAdmCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrCountry {
            get {
                return this.addrCountryField;
            }
            set {
                this.addrCountryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrPostcode {
            get {
                return this.addrPostcodeField;
            }
            set {
                this.addrPostcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrCity {
            get {
                return this.addrCityField;
            }
            set {
                this.addrCityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrRegionRcuCode {
            get {
                return this.addrRegionRcuCodeField;
            }
            set {
                this.addrRegionRcuCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrRegion {
            get {
                return this.addrRegionField;
            }
            set {
                this.addrRegionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrDistrict {
            get {
                return this.addrDistrictField;
            }
            set {
                this.addrDistrictField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrStreet {
            get {
                return this.addrStreetField;
            }
            set {
                this.addrStreetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrHouseNo {
            get {
                return this.addrHouseNoField;
            }
            set {
                this.addrHouseNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrFlat {
            get {
                return this.addrFlatField;
            }
            set {
                this.addrFlatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrBuildNo {
            get {
                return this.addrBuildNoField;
            }
            set {
                this.addrBuildNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrCountryJur {
            get {
                return this.addrCountryJurField;
            }
            set {
                this.addrCountryJurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrPostcodeJur {
            get {
                return this.addrPostcodeJurField;
            }
            set {
                this.addrPostcodeJurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrCityJur {
            get {
                return this.addrCityJurField;
            }
            set {
                this.addrCityJurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrRegionJurRcuCode {
            get {
                return this.addrRegionJurRcuCodeField;
            }
            set {
                this.addrRegionJurRcuCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrRegionJur {
            get {
                return this.addrRegionJurField;
            }
            set {
                this.addrRegionJurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrDistrictJur {
            get {
                return this.addrDistrictJurField;
            }
            set {
                this.addrDistrictJurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrStreetJur {
            get {
                return this.addrStreetJurField;
            }
            set {
                this.addrStreetJurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrHouseNoJur {
            get {
                return this.addrHouseNoJurField;
            }
            set {
                this.addrHouseNoJurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrFlatJur {
            get {
                return this.addrFlatJurField;
            }
            set {
                this.addrFlatJurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrBuildNoJur {
            get {
                return this.addrBuildNoJurField;
            }
            set {
                this.addrBuildNoJurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrCountryBus {
            get {
                return this.addrCountryBusField;
            }
            set {
                this.addrCountryBusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrPostcodeBus {
            get {
                return this.addrPostcodeBusField;
            }
            set {
                this.addrPostcodeBusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrCityBus {
            get {
                return this.addrCityBusField;
            }
            set {
                this.addrCityBusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrRegionBus {
            get {
                return this.addrRegionBusField;
            }
            set {
                this.addrRegionBusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrDistrictBus {
            get {
                return this.addrDistrictBusField;
            }
            set {
                this.addrDistrictBusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrStreetBus {
            get {
                return this.addrStreetBusField;
            }
            set {
                this.addrStreetBusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrHouseNoBus {
            get {
                return this.addrHouseNoBusField;
            }
            set {
                this.addrHouseNoBusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrFlatBus {
            get {
                return this.addrFlatBusField;
            }
            set {
                this.addrFlatBusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addrBuildNoBus {
            get {
                return this.addrBuildNoBusField;
            }
            set {
                this.addrBuildNoBusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contInf1Home {
            get {
                return this.contInf1HomeField;
            }
            set {
                this.contInf1HomeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contInf2Cellur {
            get {
                return this.contInf2CellurField;
            }
            set {
                this.contInf2CellurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contInf3Work {
            get {
                return this.contInf3WorkField;
            }
            set {
                this.contInf3WorkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contInf4Fax {
            get {
                return this.contInf4FaxField;
            }
            set {
                this.contInf4FaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contInf5Email {
            get {
                return this.contInf5EmailField;
            }
            set {
                this.contInf5EmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contInf6Regaddr {
            get {
                return this.contInf6RegaddrField;
            }
            set {
                this.contInf6RegaddrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contInf7Staffdw {
            get {
                return this.contInf7StaffdwField;
            }
            set {
                this.contInf7StaffdwField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contInf8Contper {
            get {
                return this.contInf8ContperField;
            }
            set {
                this.contInf8ContperField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contPersName {
            get {
                return this.contPersNameField;
            }
            set {
                this.contPersNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contPersType {
            get {
                return this.contPersTypeField;
            }
            set {
                this.contPersTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string k060 {
            get {
                return this.k060Field;
            }
            set {
                this.k060Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string k070 {
            get {
                return this.k070Field;
            }
            set {
                this.k070Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string nrTaxId {
            get {
                return this.nrTaxIdField;
            }
            set {
                this.nrTaxIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> taxRegDate {
            get {
                return this.taxRegDateField;
            }
            set {
                this.taxRegDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool taxRegDateSpecified {
            get {
                return this.taxRegDateFieldSpecified;
            }
            set {
                this.taxRegDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cardProduct {
            get {
                return this.cardProductField;
            }
            set {
                this.cardProductField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> identification {
            get {
                return this.identificationField;
            }
            set {
                this.identificationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool identificationSpecified {
            get {
                return this.identificationFieldSpecified;
            }
            set {
                this.identificationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string statusText {
            get {
                return this.statusTextField;
            }
            set {
                this.statusTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string modifiedBy {
            get {
                return this.modifiedByField;
            }
            set {
                this.modifiedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> isVIP {
            get {
                return this.isVIPField;
            }
            set {
                this.isVIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isVIPSpecified {
            get {
                return this.isVIPFieldSpecified;
            }
            set {
                this.isVIPFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> isAClub {
            get {
                return this.isAClubField;
            }
            set {
                this.isAClubField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isAClubSpecified {
            get {
                return this.isAClubFieldSpecified;
            }
            set {
                this.isAClubFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string finBlock {
            get {
                return this.finBlockField;
            }
            set {
                this.finBlockField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string K050 {
            get {
                return this.k050Field;
            }
            set {
                this.k050Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string nameUkr {
            get {
                return this.nameUkrField;
            }
            set {
                this.nameUkrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string shortNameUkr {
            get {
                return this.shortNameUkrField;
            }
            set {
                this.shortNameUkrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contInf9URL {
            get {
                return this.contInf9URLField;
            }
            set {
                this.contInf9URLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string accountOfficer {
            get {
                return this.accountOfficerField;
            }
            set {
                this.accountOfficerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sector {
            get {
                return this.sectorField;
            }
            set {
                this.sectorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string k110 {
            get {
                return this.k110Field;
            }
            set {
                this.k110Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string creditRating {
            get {
                return this.creditRatingField;
            }
            set {
                this.creditRatingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addressJur {
            get {
                return this.addressJurField;
            }
            set {
                this.addressJurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string riskCategory {
            get {
                return this.riskCategoryField;
            }
            set {
                this.riskCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string nameEng {
            get {
                return this.nameEngField;
            }
            set {
                this.nameEngField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> bankRegDate {
            get {
                return this.bankRegDateField;
            }
            set {
                this.bankRegDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bankRegDateSpecified {
            get {
                return this.bankRegDateFieldSpecified;
            }
            set {
                this.bankRegDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string toboId {
            get {
                return this.toboIdField;
            }
            set {
                this.toboIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string staRegAgency {
            get {
                return this.staRegAgencyField;
            }
            set {
                this.staRegAgencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addSubType {
            get {
                return this.addSubTypeField;
            }
            set {
                this.addSubTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string industry {
            get {
                return this.industryField;
            }
            set {
                this.industryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string k013 {
            get {
                return this.k013Field;
            }
            set {
                this.k013Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string taxCategory {
            get {
                return this.taxCategoryField;
            }
            set {
                this.taxCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string stateRegDocSrNo {
            get {
                return this.stateRegDocSrNoField;
            }
            set {
                this.stateRegDocSrNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string workTypesCode {
            get {
                return this.workTypesCodeField;
            }
            set {
                this.workTypesCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string workTypesText {
            get {
                return this.workTypesTextField;
            }
            set {
                this.workTypesTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string workTypesTaxReg {
            get {
                return this.workTypesTaxRegField;
            }
            set {
                this.workTypesTaxRegField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string positionTypesCode {
            get {
                return this.positionTypesCodeField;
            }
            set {
                this.positionTypesCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string positionTypesText {
            get {
                return this.positionTypesTextField;
            }
            set {
                this.positionTypesTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sectorClassificationCode {
            get {
                return this.sectorClassificationCodeField;
            }
            set {
                this.sectorClassificationCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sectorClassificationText {
            get {
                return this.sectorClassificationTextField;
            }
            set {
                this.sectorClassificationTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string incomeSourcesCode {
            get {
                return this.incomeSourcesCodeField;
            }
            set {
                this.incomeSourcesCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string incomeSourcesText {
            get {
                return this.incomeSourcesTextField;
            }
            set {
                this.incomeSourcesTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string incomeLevelsCode {
            get {
                return this.incomeLevelsCodeField;
            }
            set {
                this.incomeLevelsCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string propertyTypesCode {
            get {
                return this.propertyTypesCodeField;
            }
            set {
                this.propertyTypesCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string bankProductsCode {
            get {
                return this.bankProductsCodeField;
            }
            set {
                this.bankProductsCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string workPlace {
            get {
                return this.workPlaceField;
            }
            set {
                this.workPlaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string accountsInOtherBanks {
            get {
                return this.accountsInOtherBanksField;
            }
            set {
                this.accountsInOtherBanksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isPublicPerson {
            get {
                return this.isPublicPersonField;
            }
            set {
                this.isPublicPersonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string controller {
            get {
                return this.controllerField;
            }
            set {
                this.controllerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string activityTypes {
            get {
                return this.activityTypesField;
            }
            set {
                this.activityTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isCardContragent {
            get {
                return this.isCardContragentField;
            }
            set {
                this.isCardContragentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class checkResidenceChangeItem {
        
        private string checkCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string checkCode {
            get {
                return this.checkCodeField;
            }
            set {
                this.checkCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class searchContragentByDealNoItem {
        
        private string sysFromField;
        
        private string contragentIdField;
        
        private contragent[] getContragentByIdResponseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sysFrom {
            get {
                return this.sysFromField;
            }
            set {
                this.sysFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentId {
            get {
                return this.contragentIdField;
            }
            set {
                this.contragentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public contragent[] getContragentByIdResponse {
            get {
                return this.getContragentByIdResponseField;
            }
            set {
                this.getContragentByIdResponseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class searchContragentByAccountNoItem {
        
        private string sysFromField;
        
        private string contragentIdField;
        
        private contragent[] getContragentByIdResponseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sysFrom {
            get {
                return this.sysFromField;
            }
            set {
                this.sysFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentId {
            get {
                return this.contragentIdField;
            }
            set {
                this.contragentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public contragent[] getContragentByIdResponse {
            get {
                return this.getContragentByIdResponseField;
            }
            set {
                this.getContragentByIdResponseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class updateContragentTaxInfoItem {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class registerContragentResponse {
        
        private string contragentIdField;
        
        private string residenceField;
        
        private string nationalityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentId {
            get {
                return this.contragentIdField;
            }
            set {
                this.contragentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string residence {
            get {
                return this.residenceField;
            }
            set {
                this.residenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class registerCardDealItem {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class getCustomerProfileByTaxIdItem {
        
        private string familyStatusField;
        
        private string childCountField;
        
        private string dependantsCountField;
        
        private string spouseLastNameField;
        
        private string spouseNameField;
        
        private System.Nullable<System.DateTime> spouseBirthDateField;
        
        private bool spouseBirthDateFieldSpecified;
        
        private System.Nullable<System.DateTime> marriageDateField;
        
        private bool marriageDateFieldSpecified;
        
        private string nameChangedField;
        
        private System.Nullable<System.DateTime> nameChangedDateField;
        
        private bool nameChangedDateFieldSpecified;
        
        private string formerLastNameField;
        
        private string formerFirstNameField;
        
        private string formerMidNameField;
        
        private string contragentPostcodeField;
        
        private string contragentRegionField;
        
        private string contragentDistrictField;
        
        private string contragentSettlementField;
        
        private string contragentAppField;
        
        private string contragentStreetField;
        
        private string contragentHouseField;
        
        private System.Nullable<System.DateTime> contragentRegDateField;
        
        private bool contragentRegDateFieldSpecified;
        
        private string contragentPhoneField;
        
        private string permanentResidentTypeField;
        
        private System.Nullable<System.DateTime> residingDateField;
        
        private bool residingDateFieldSpecified;
        
        private string appTotalAreaField;
        
        private string purchaseWayField;
        
        private string habitationTypeField;
        
        private string permanentResidentTermField;
        
        private string orgTypeField;
        
        private string orgNameField;
        
        private string orgRegistrCodeField;
        
        private string orgPostCodeField;
        
        private string orgRegionField;
        
        private string orgDistrictField;
        
        private string orgSettlementField;
        
        private string orgStreetField;
        
        private string orgaHouseField;
        
        private string orgPhoneNumField;
        
        private string orgEmployeeCountField;
        
        private System.Nullable<System.DateTime> startWorkDateField;
        
        private bool startWorkDateFieldSpecified;
        
        private string totalEmplYearsField;
        
        private string educationField;
        
        private string orgScopeActivityField;
        
        private string scopeActivityField;
        
        private string positionField;
        
        private string subordinatesCountField;
        
        private string workTypeField;
        
        private string guarantLastNameField;
        
        private string guarantNameField;
        
        private string guarantMidNameField;
        
        private string guarantTaxIdField;
        
        private string guarantPassportSrField;
        
        private string guarantPassportNoField;
        
        private System.Nullable<System.DateTime> guarantBirthDateField;
        
        private bool guarantBirthDateFieldSpecified;
        
        private string guarantPhoneField;
        
        private string guarantMobilePhoneField;
        
        private string guarantPostcodeField;
        
        private string guarantRegionField;
        
        private string guarantDistrictField;
        
        private string guarantSettlementField;
        
        private string guarantStreetField;
        
        private string guarantHouseField;
        
        private string guarantAppField;
        
        private System.Nullable<System.DateTime> guarantRegDateField;
        
        private bool guarantRegDateFieldSpecified;
        
        private string confirmedProfitsField;
        
        private string basicProfitsField;
        
        private string extLoanCountField;
        
        private string extLoanCreditorField;
        
        private System.Nullable<System.DateTime> extLoanStartDateField;
        
        private bool extLoanStartDateFieldSpecified;
        
        private string carCountField;
        
        private string carModelField;
        
        private string carNumberField;
        
        private string carYearField;
        
        private string hasCarLoanField;
        
        private string hasMortgageLoanField;
        
        private string hasOtherLoanField;
        
        private string totalLoansAmountField;
        
        private string totalLoansMonthPaymentField;
        
        private string totalLoansRemainBalanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string familyStatus {
            get {
                return this.familyStatusField;
            }
            set {
                this.familyStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string childCount {
            get {
                return this.childCountField;
            }
            set {
                this.childCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string dependantsCount {
            get {
                return this.dependantsCountField;
            }
            set {
                this.dependantsCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string spouseLastName {
            get {
                return this.spouseLastNameField;
            }
            set {
                this.spouseLastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string spouseName {
            get {
                return this.spouseNameField;
            }
            set {
                this.spouseNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> spouseBirthDate {
            get {
                return this.spouseBirthDateField;
            }
            set {
                this.spouseBirthDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool spouseBirthDateSpecified {
            get {
                return this.spouseBirthDateFieldSpecified;
            }
            set {
                this.spouseBirthDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> marriageDate {
            get {
                return this.marriageDateField;
            }
            set {
                this.marriageDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool marriageDateSpecified {
            get {
                return this.marriageDateFieldSpecified;
            }
            set {
                this.marriageDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string nameChanged {
            get {
                return this.nameChangedField;
            }
            set {
                this.nameChangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> nameChangedDate {
            get {
                return this.nameChangedDateField;
            }
            set {
                this.nameChangedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nameChangedDateSpecified {
            get {
                return this.nameChangedDateFieldSpecified;
            }
            set {
                this.nameChangedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string formerLastName {
            get {
                return this.formerLastNameField;
            }
            set {
                this.formerLastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string formerFirstName {
            get {
                return this.formerFirstNameField;
            }
            set {
                this.formerFirstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string formerMidName {
            get {
                return this.formerMidNameField;
            }
            set {
                this.formerMidNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentPostcode {
            get {
                return this.contragentPostcodeField;
            }
            set {
                this.contragentPostcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentRegion {
            get {
                return this.contragentRegionField;
            }
            set {
                this.contragentRegionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentDistrict {
            get {
                return this.contragentDistrictField;
            }
            set {
                this.contragentDistrictField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentSettlement {
            get {
                return this.contragentSettlementField;
            }
            set {
                this.contragentSettlementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentApp {
            get {
                return this.contragentAppField;
            }
            set {
                this.contragentAppField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentStreet {
            get {
                return this.contragentStreetField;
            }
            set {
                this.contragentStreetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentHouse {
            get {
                return this.contragentHouseField;
            }
            set {
                this.contragentHouseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> contragentRegDate {
            get {
                return this.contragentRegDateField;
            }
            set {
                this.contragentRegDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool contragentRegDateSpecified {
            get {
                return this.contragentRegDateFieldSpecified;
            }
            set {
                this.contragentRegDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentPhone {
            get {
                return this.contragentPhoneField;
            }
            set {
                this.contragentPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string permanentResidentType {
            get {
                return this.permanentResidentTypeField;
            }
            set {
                this.permanentResidentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> residingDate {
            get {
                return this.residingDateField;
            }
            set {
                this.residingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool residingDateSpecified {
            get {
                return this.residingDateFieldSpecified;
            }
            set {
                this.residingDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string appTotalArea {
            get {
                return this.appTotalAreaField;
            }
            set {
                this.appTotalAreaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string purchaseWay {
            get {
                return this.purchaseWayField;
            }
            set {
                this.purchaseWayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string habitationType {
            get {
                return this.habitationTypeField;
            }
            set {
                this.habitationTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string permanentResidentTerm {
            get {
                return this.permanentResidentTermField;
            }
            set {
                this.permanentResidentTermField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orgType {
            get {
                return this.orgTypeField;
            }
            set {
                this.orgTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orgName {
            get {
                return this.orgNameField;
            }
            set {
                this.orgNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orgRegistrCode {
            get {
                return this.orgRegistrCodeField;
            }
            set {
                this.orgRegistrCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orgPostCode {
            get {
                return this.orgPostCodeField;
            }
            set {
                this.orgPostCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orgRegion {
            get {
                return this.orgRegionField;
            }
            set {
                this.orgRegionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orgDistrict {
            get {
                return this.orgDistrictField;
            }
            set {
                this.orgDistrictField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orgSettlement {
            get {
                return this.orgSettlementField;
            }
            set {
                this.orgSettlementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orgStreet {
            get {
                return this.orgStreetField;
            }
            set {
                this.orgStreetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orgaHouse {
            get {
                return this.orgaHouseField;
            }
            set {
                this.orgaHouseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orgPhoneNum {
            get {
                return this.orgPhoneNumField;
            }
            set {
                this.orgPhoneNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orgEmployeeCount {
            get {
                return this.orgEmployeeCountField;
            }
            set {
                this.orgEmployeeCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> startWorkDate {
            get {
                return this.startWorkDateField;
            }
            set {
                this.startWorkDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startWorkDateSpecified {
            get {
                return this.startWorkDateFieldSpecified;
            }
            set {
                this.startWorkDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string totalEmplYears {
            get {
                return this.totalEmplYearsField;
            }
            set {
                this.totalEmplYearsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string education {
            get {
                return this.educationField;
            }
            set {
                this.educationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orgScopeActivity {
            get {
                return this.orgScopeActivityField;
            }
            set {
                this.orgScopeActivityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string scopeActivity {
            get {
                return this.scopeActivityField;
            }
            set {
                this.scopeActivityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subordinatesCount {
            get {
                return this.subordinatesCountField;
            }
            set {
                this.subordinatesCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string workType {
            get {
                return this.workTypeField;
            }
            set {
                this.workTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantLastName {
            get {
                return this.guarantLastNameField;
            }
            set {
                this.guarantLastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantName {
            get {
                return this.guarantNameField;
            }
            set {
                this.guarantNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantMidName {
            get {
                return this.guarantMidNameField;
            }
            set {
                this.guarantMidNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantTaxId {
            get {
                return this.guarantTaxIdField;
            }
            set {
                this.guarantTaxIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantPassportSr {
            get {
                return this.guarantPassportSrField;
            }
            set {
                this.guarantPassportSrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantPassportNo {
            get {
                return this.guarantPassportNoField;
            }
            set {
                this.guarantPassportNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> guarantBirthDate {
            get {
                return this.guarantBirthDateField;
            }
            set {
                this.guarantBirthDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool guarantBirthDateSpecified {
            get {
                return this.guarantBirthDateFieldSpecified;
            }
            set {
                this.guarantBirthDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantPhone {
            get {
                return this.guarantPhoneField;
            }
            set {
                this.guarantPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantMobilePhone {
            get {
                return this.guarantMobilePhoneField;
            }
            set {
                this.guarantMobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantPostcode {
            get {
                return this.guarantPostcodeField;
            }
            set {
                this.guarantPostcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantRegion {
            get {
                return this.guarantRegionField;
            }
            set {
                this.guarantRegionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantDistrict {
            get {
                return this.guarantDistrictField;
            }
            set {
                this.guarantDistrictField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantSettlement {
            get {
                return this.guarantSettlementField;
            }
            set {
                this.guarantSettlementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantStreet {
            get {
                return this.guarantStreetField;
            }
            set {
                this.guarantStreetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantHouse {
            get {
                return this.guarantHouseField;
            }
            set {
                this.guarantHouseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string guarantApp {
            get {
                return this.guarantAppField;
            }
            set {
                this.guarantAppField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> guarantRegDate {
            get {
                return this.guarantRegDateField;
            }
            set {
                this.guarantRegDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool guarantRegDateSpecified {
            get {
                return this.guarantRegDateFieldSpecified;
            }
            set {
                this.guarantRegDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string confirmedProfits {
            get {
                return this.confirmedProfitsField;
            }
            set {
                this.confirmedProfitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string basicProfits {
            get {
                return this.basicProfitsField;
            }
            set {
                this.basicProfitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string extLoanCount {
            get {
                return this.extLoanCountField;
            }
            set {
                this.extLoanCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string extLoanCreditor {
            get {
                return this.extLoanCreditorField;
            }
            set {
                this.extLoanCreditorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> extLoanStartDate {
            get {
                return this.extLoanStartDateField;
            }
            set {
                this.extLoanStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool extLoanStartDateSpecified {
            get {
                return this.extLoanStartDateFieldSpecified;
            }
            set {
                this.extLoanStartDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string carCount {
            get {
                return this.carCountField;
            }
            set {
                this.carCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string carModel {
            get {
                return this.carModelField;
            }
            set {
                this.carModelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string carNumber {
            get {
                return this.carNumberField;
            }
            set {
                this.carNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string carYear {
            get {
                return this.carYearField;
            }
            set {
                this.carYearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string hasCarLoan {
            get {
                return this.hasCarLoanField;
            }
            set {
                this.hasCarLoanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string hasMortgageLoan {
            get {
                return this.hasMortgageLoanField;
            }
            set {
                this.hasMortgageLoanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string hasOtherLoan {
            get {
                return this.hasOtherLoanField;
            }
            set {
                this.hasOtherLoanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string totalLoansAmount {
            get {
                return this.totalLoansAmountField;
            }
            set {
                this.totalLoansAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string totalLoansMonthPayment {
            get {
                return this.totalLoansMonthPaymentField;
            }
            set {
                this.totalLoansMonthPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string totalLoansRemainBalance {
            get {
                return this.totalLoansRemainBalanceField;
            }
            set {
                this.totalLoansRemainBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class customerProfileFull {
        
        private string contragentIdField;
        
        private string taxIdField;
        
        private getCustomerProfileByTaxIdItem[] getCustomerProfileByTaxIdResponceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentId {
            get {
                return this.contragentIdField;
            }
            set {
                this.contragentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string taxId {
            get {
                return this.taxIdField;
            }
            set {
                this.taxIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public getCustomerProfileByTaxIdItem[] getCustomerProfileByTaxIdResponce {
            get {
                return this.getCustomerProfileByTaxIdResponceField;
            }
            set {
                this.getCustomerProfileByTaxIdResponceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class identifyContragentByDealItem {
        
        private string entityField;
        
        private string taxIdMixField;
        
        private string contragentIdField;
        
        private contragent[] getContragentByIdResponseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string entity {
            get {
                return this.entityField;
            }
            set {
                this.entityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string taxIdMix {
            get {
                return this.taxIdMixField;
            }
            set {
                this.taxIdMixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contragentId {
            get {
                return this.contragentIdField;
            }
            set {
                this.contragentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public contragent[] getContragentByIdResponse {
            get {
                return this.getContragentByIdResponseField;
            }
            set {
                this.getContragentByIdResponseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class getContragentRelationsItem {
        
        private string сontragentIdField;
        
        private string sectorField;
        
        private string fullNameField;
        
        private string relationCodeField;
        
        private string relationNameField;
        
        private string relativeContragentIdField;
        
        private string relativeSectorField;
        
        private string relativeTaxIdField;
        
        private string relativeFullNameField;
        
        private string relationModifiedDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string сontragentId {
            get {
                return this.сontragentIdField;
            }
            set {
                this.сontragentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sector {
            get {
                return this.sectorField;
            }
            set {
                this.sectorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string relationCode {
            get {
                return this.relationCodeField;
            }
            set {
                this.relationCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string relationName {
            get {
                return this.relationNameField;
            }
            set {
                this.relationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string relativeContragentId {
            get {
                return this.relativeContragentIdField;
            }
            set {
                this.relativeContragentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string relativeSector {
            get {
                return this.relativeSectorField;
            }
            set {
                this.relativeSectorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string relativeTaxId {
            get {
                return this.relativeTaxIdField;
            }
            set {
                this.relativeTaxIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string relativeFullName {
            get {
                return this.relativeFullNameField;
            }
            set {
                this.relativeFullNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string relationModifiedDate {
            get {
                return this.relationModifiedDateField;
            }
            set {
                this.relationModifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class getContactByTaxIdItem {
        
        private string contactTypeField;
        
        private string phoneField;
        
        private string postalCodeField;
        
        private string regionNameField;
        
        private string districtNameField;
        
        private string settlementNameField;
        
        private string streetField;
        
        private string houseField;
        
        private string buildingField;
        
        private string appartmentField;
        
        private string deliveryAddressField;
        
        private string nameField;
        
        private string emailField;
        
        private string productCodeField;
        
        private string orderDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contactType {
            get {
                return this.contactTypeField;
            }
            set {
                this.contactTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string postalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string regionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string districtName {
            get {
                return this.districtNameField;
            }
            set {
                this.districtNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string settlementName {
            get {
                return this.settlementNameField;
            }
            set {
                this.settlementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string house {
            get {
                return this.houseField;
            }
            set {
                this.houseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string building {
            get {
                return this.buildingField;
            }
            set {
                this.buildingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string appartment {
            get {
                return this.appartmentField;
            }
            set {
                this.appartmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deliveryAddress {
            get {
                return this.deliveryAddressField;
            }
            set {
                this.deliveryAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string productCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class checkCodeD5CodeD6Item {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class checkContragentItem {
        
        private string fieldNameField;
        
        private string fieldValueField;
        
        private string errorTextField;
        
        private string errorTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fieldValue {
            get {
                return this.fieldValueField;
            }
            set {
                this.fieldValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sab/")]
    public partial class getFinMonitorRiskByContragentIdItem {
        
        private string riskCategoryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string riskCategory {
            get {
                return this.riskCategoryField;
            }
            set {
                this.riskCategoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void searchContragentCompletedEventHandler(object sender, searchContragentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchContragentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchContragentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public contragent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((contragent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getContragentByTaxIdCompletedEventHandler(object sender, getContragentByTaxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContragentByTaxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getContragentByTaxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public contragent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((contragent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void searchContragentUSBCompletedEventHandler(object sender, searchContragentUSBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchContragentUSBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchContragentUSBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public contragent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((contragent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getFinMonitorRiskByContragentIdCompletedEventHandler(object sender, getFinMonitorRiskByContragentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFinMonitorRiskByContragentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFinMonitorRiskByContragentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getFinMonitorRiskByContragentIdItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getFinMonitorRiskByContragentIdItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void checkContragentCompletedEventHandler(object sender, checkContragentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkContragentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkContragentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public checkContragentItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((checkContragentItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void checkCodeD5CodeD6CompletedEventHandler(object sender, checkCodeD5CodeD6CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkCodeD5CodeD6CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkCodeD5CodeD6CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public checkCodeD5CodeD6Item[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((checkCodeD5CodeD6Item[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getContactByTaxIdCompletedEventHandler(object sender, getContactByTaxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContactByTaxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getContactByTaxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getContactByTaxIdItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getContactByTaxIdItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getContragentRelationsCompletedEventHandler(object sender, getContragentRelationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContragentRelationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getContragentRelationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getContragentRelationsItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getContragentRelationsItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void identifyContragentByDealCompletedEventHandler(object sender, identifyContragentByDealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class identifyContragentByDealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal identifyContragentByDealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public identifyContragentByDealItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((identifyContragentByDealItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void searchContragent2CompletedEventHandler(object sender, searchContragent2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchContragent2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchContragent2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public contragent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((contragent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getContragentByIdCompletedEventHandler(object sender, getContragentByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContragentByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getContragentByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public contragent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((contragent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCustomerProfileFullCompletedEventHandler(object sender, getCustomerProfileFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerProfileFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerProfileFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customerProfileFull[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customerProfileFull[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCustomerProfileByTaxIdCompletedEventHandler(object sender, getCustomerProfileByTaxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerProfileByTaxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerProfileByTaxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getCustomerProfileByTaxIdItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getCustomerProfileByTaxIdItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void registerCardDealCompletedEventHandler(object sender, registerCardDealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerCardDealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerCardDealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public registerCardDealItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((registerCardDealItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void registerContragentCompletedEventHandler(object sender, registerContragentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerContragentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerContragentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public registerContragentResponse[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((registerContragentResponse[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void updateContragentTaxInfoCompletedEventHandler(object sender, updateContragentTaxInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateContragentTaxInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateContragentTaxInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public updateContragentTaxInfoItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((updateContragentTaxInfoItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void searchContragentByAccountNoCompletedEventHandler(object sender, searchContragentByAccountNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchContragentByAccountNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchContragentByAccountNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public searchContragentByAccountNoItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((searchContragentByAccountNoItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void searchContragentByDealNoCompletedEventHandler(object sender, searchContragentByDealNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchContragentByDealNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchContragentByDealNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public searchContragentByDealNoItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((searchContragentByDealNoItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void checkResidenceChangeCompletedEventHandler(object sender, checkResidenceChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkResidenceChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkResidenceChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public checkResidenceChangeItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((checkResidenceChangeItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getFinnClassCompletedEventHandler(object sender, getFinnClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFinnClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFinnClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public contragent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((contragent[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591